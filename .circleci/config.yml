# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-java:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u171-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "java/pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: cd java && mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "java/pom.xml" }}

      # run tests!
      - run: cd java && mvn clean test && mvn clean install

  build-python: # runs not using Workflows must have a `build` job as entry point 
    # directory where steps are run
    working_directory: ~/repo
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.7.2
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: true
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "python/Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            cd python && pipenv install --dev
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "python/Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          command: |
            cd python && pipenv run flake8 ./
      - run: 
          command: |
            cd python && pipenv run black --check .
      - run:
          command: |
            cd python && pipenv run python -m unittest tests/*.py
     
workflows:
  version: 2
  master:
    jobs:
      - build-java
      - build-python